countries = {
  MX: {
    country: "México",
    currency: "MXN",
    culturePayment: "$350",
    scheme2Cost: "$42,500",
    scheme3Cost: "$85,000",
    scheme4Cost: "$85,000",
    scheme5Cost: "$85,000",
    scheme1Ceil: "$120,000",
    scheme1CeilStipend: "$141,660"
    scheme2Ceil: "$60,000",
    scheme4InstallmentFee: "$3638",
    scheme4Installments: "8",
    scheme5InstallmentFee: "$17,000",
    scheme5Installments: "5",
    scheme4Ceil: "$76,213",
    salaryRange: "$23,025",
    socialCondition: "categoría socioeconómica Media Baja o menor",
    residency: "mexicano(a)",
  },
  CO: {
    country: "Colombia",
    currency: "COP",
    culturePayment: '$50,000',
    scheme2Cost: "$7.5M",
    scheme3Cost: "$15M",
    scheme4Cost: "$15M",
    scheme5Cost: "$15M",
    scheme1Ceil: "$21M",
    scheme1CeilStipend: "$28M"
    scheme2Ceil: "$10.5M",
    scheme4InstallmentFee: "$675.000",
    scheme4Installments: "8",
    scheme5InstallmentFee: "$3M",
    scheme5Installments: "5",
    scheme4Ceil: "$14.5M",
    salaryRange: "$5.7M",
    socialCondition: "estrato 3 o menor",
    residency: "colombiano(a)"
  },
  other: {
    country: "",
    currency: "usd",
    culturePayment: '$13',
    scheme2Cost: "$2,500",
    scheme3Cost: "$5,000",
    scheme4Cost: "$5,000",
    scheme5Cost: "$5,000",
    scheme1Ceil: "$7,000",
    scheme1CeilStipend: "$9,300"
    scheme2Ceil: "$3,500",
    scheme4InstallmentFee: "$315",
    scheme4Installments: "8",
    scheme5InstallmentFee: "$1,000",
    scheme5Installments: "5",
    scheme4Ceil: "$4,800",
    salaryRange: "$1,200",
    socialCondition: "estrato 3 o menor",
    residency: "colombiano(a) o mexicano(a)"
  }
}

class TopProgramView extends Backbone.View
  el: '.innovate-program'

  initialize: ->
    $('.overlay').html('<div class="top-loading"><div class="loader">Loading...</div></div>').show()
    $.getJSON("//ipinfo.io?token=dbb0f38cf907e8")
      .done((response) =>
        country = response.country
        country = "other" if country != "CO" and country != "MX"

        $('.overlay').hide()
        currency = countries[country].currency

        @.$("[data-holder='scheme-1-currency']").html(currency)
        @.$("[data-holder='scheme-2-value']").html("#{countries[country].scheme2Cost} #{currency}")
        @.$("[data-holder='scheme-3-value']").html("#{countries[country].scheme3Cost} #{currency}")
        @.$("[data-holder='scheme-4-value']").html("#{countries[country].scheme4Cost} #{currency}")
        @.$("[data-holder='salary-range']").html("#{countries[country].salaryRange} #{currency}")
        @.$("[data-holder='culture-payment']").html("#{countries[country].culturePayment} #{currency}")
        @.$("[data-holder='ceil-scheme-1']").html("#{countries[country].scheme1Ceil} #{currency}")
        @.$("[data-holder='ceil-scheme-1-stipend']").html("#{countries[country].scheme1CeilStipend} #{currency}")
        @.$("[data-holder='ceil-scheme-2']").html("#{countries[country].scheme2Ceil} #{currency}")
        @.$("[data-holder='ceil-scheme-4']").html("#{countries[country].scheme4Ceil} #{currency}")
        @.$("[data-holder='scheme-4-value']").html("#{countries[country].scheme4Cost} #{currency}")
        @.$("[data-holder='scheme-4-installment-fee']").html("#{countries[country].scheme4InstallmentFee} #{currency}")
        @.$("[data-holder='scheme-4-installments']").html("#{countries[country].scheme4Installments}")
        @.$("[data-holder='scheme-5-installment-fee']").html("#{countries[country].scheme5InstallmentFee} #{currency}")
        @.$("[data-holder='scheme-5-installments']").html("#{countries[country].scheme5Installments}")
        @.$("[data-holder='social-condition']").html("#{countries[country].socialCondition}")
        @.$("[data-holder='residency']").html(countries[country].residency)
        @.$("[data-holder='country']").html(countries[country].country)
        @.$('#country').val(country)
        @.$('#mobile-code').html('+' + $('#country option:selected').data('code'))



        @.$("#payment-method-fulltime option[value='scheme-1']").text("Esquema 1 - $0 #{currency} de entrada + 17% de ingresos (3 años)")
        @.$("#payment-method-fulltime option[value='scheme-2']").text("Esquema 2 - #{countries[country].scheme2Cost} #{currency} de entrada + 17% de ingresos (1 año y medio)")
        @.$("#payment-method-fulltime option[value='scheme-3']").text("Esquema 3 - #{countries[country].scheme3Cost} #{currency} de entrada")

        @.$("#payment-method-partime option[value='scheme-1']").text("Esquema 1 - #{countries[country].scheme4Installments} pagos de #{countries[country].scheme4InstallmentFee} + 17% de ingresos (2 años)")
        @.$("#payment-method-partime option[value='scheme-2']").text("Esquema 2 - #{countries[country].scheme5Installments} pagos de #{countries[country].scheme5InstallmentFee}")
        @.$("#payment-method-partime option[value='scheme-3']").text("Esquema 3 - #{countries[country].scheme5Cost} #{currency} de entrada")
      )

  events: ->
    "click .apply-now-btn": "show_registration"

  show_registration: ->
    new TopRegistrationView()

class TopRegistrationView extends Backbone.View
  el: '#application-modal'

  initialize: ->
    @step = 1
    @render()

  render: ->
    $(@el).on('shown.bs.modal', =>

    ).modal()

  events: ->
    "click .next": "handle_navigation"
    "click .back": "navigate_back"
    "change #country": "change_country_code"
    "click .finish": "submit_form"

  handle_navigation: (e) ->
    e.preventDefault()

    @['after_step_' + @step]((valid, action) =>
      @.$('.next').attr('disabled', false)

      action() if action
    )

  navigate: (direction) =>
    @.$('.step-' + @step).hide()
    @step = @step + direction

    @.$('.step-' + @step).show()
    @['before_step_' + @step]() # before step callback

    @show_or_hide_buttons()

  navigate_back: (e) =>
    e.preventDefault()
    @navigate(-1)

  show_or_hide_buttons: ->
    if @step > 1 then @.$('.back').show() else @.$('.back').hide()
    if @step == 3
      @.$('.next').hide()
      @.$('.finish').show()
    else
      @.$('.next').show()
      @.$('.finish').hide()

  before_step_1: ->

  after_step_1: (callback) ->
    @.$('.step-1 .form-group, .step-1 .checkbox').removeClass('has-error')

    valid = true
    valid = false if !@checkbox_is_selected($('#terms'))

    if valid
      @navigate(1)
      callback(true)
    else
      callback(false)

  before_step_2: ->
    @.$('#first-name').focus()

  after_step_2: (callback) ->
    @.$('.step-2 .form-group').removeClass('has-error')

    valid = true
    valid = false if !@input_text_is_valid($('#first-name'))
    valid = false if !@input_text_is_valid($('#last-name'))
    valid = false if !@input_text_is_valid($('#email'))
    valid = false if !@input_text_is_valid($('#birthday'))
    valid = false if !@input_text_is_valid($('#gender'))
    valid = false if !@input_text_is_valid($('#country'))
    valid = false if !@input_text_is_valid($('#mobile'))
    valid = false if !@input_text_is_valid($('#format'))
    valid = false if !@input_text_is_valid($('#payment-method-partime')) && !@input_text_is_valid($('#payment-method-fulltime'))
    
    @navigate(1) if valid
    callback(valid)

  before_step_3: ->

  submit_form: ->
    @.$('.step-3 .form-group').removeClass('has-error')

    valid = true
    valid = false if !@input_text_is_valid($('#goal'))
    valid = false if !@input_text_is_valid($('#experience'))
    valid = false if !@input_text_is_valid($('#additional'))

    if valid
      @.$('.finish').attr('disabled', true)
      @.$('#application-form')[0].submit()

  change_country_code: ->
    country = $('#country').val()
    if (country != "")
      @.$('#mobile-code').html('+' + $('#country option:selected').data('code'))
      $('#mobile').focus()
    else
      @.$('#mobile-code').html('+00')

  input_text_is_valid: (field, message) ->
    if field.val().replace(/\s+/, '').length == 0
      field.closest('.form-group').addClass('has-error')
      return false
    return true

  checkbox_is_selected: (field, message) ->
    if !field.is(':checked')
      field.closest('.checkbox').addClass('has-error')
      return false
    return true

window.TopProgramView = TopProgramView
