<div class="top-test-page">
  <div class="container">
    <div class="row">
      <div class="col-sm-8 col-sm-offset-2">
        <div class="logo-wrapper">
          <%= image_tag "logo-black.png" %>
        </div>

        <div class="box">
          <div class="box-header <%= @test.errors.any? ? "error": "info" %>">PRUEBA TÉCNICA</div>
          <div class="box-body">
            <p style="line-height: 1.6;">¡Muy bien! La prueba técnica se compone de 3 ejercicios que puedes resolver en los lenguajes de programación soportados. Tienes hasta una semana después de que se cierren las aplicaciones al programa para entregarla.</p>
            <p><strong>Nota:</strong> Para volver a esta página puedes utilizar el vínculo que te llegó en el correo.</p>

            <%= form_for @test, url: innovate_program_test_path do |f| %>
              <%= hidden_field_tag :applicant_id, @test.applicant.id %>

              <div class="form-group" style="margin-top: 40px;">
                <label for="lang">Selecciona el lenguaje de programación:</label>
                <select name="lang" id="lang" class="form-control">
                  <option value="0">JavaScript</option>
                  <option value="1">Ruby</option>
                  <option value="2">Python</option>
                  <option value="3">PHP</option>
                  <option value="4">Java</option>
                  <option value="5">C++</option>
                  <option value="6">C#</option>
                </select>
              </div>

              <div class="question-wrapper">
                <div class="title <%= "has-error" if @test.errors[:a2].any? %>">1. Cuenta los caracteres</div>
                <p>Escribe una función llamada <code>count</code> que reciba dos parámetros: <code>str</code> y <code>char</code>. La función debe retornar el número de veces que aparece <code>char</code> en <code>str</code>.</p>
                <p>Ejemplos:</p>
                <pre class="examples"><code>count("Hello", "l"); // retorna 2
count("Hola", "g");  // retorna 0</code></pre>

                <div class="form-group <%= "has-error" if @test.errors[:a1].any? %>">
                  <%= f.text_area :a1, class: "form-control", id: "a1" %>
                  <% if @test.errors[:a1].any? %>
                    <div class="help-block"><%= @test.errors[:a1].first %></div>
                  <% end %>
                </div>
              </div>

              <div class="question-wrapper">
                <div class="title <%= "has-error" if @test.errors[:a2].any? %>">2. Filtra el arreglo</div>
                <p>Escribe una función en JavaScript llamada <code>filter</code> que reciba un arreglo de números como parámetro y retorne un nuevo arreglo con los números mayores a 10.</p>
                <p>Ejemplos:</p>
                <pre class="examples"><code>filter([3, 12, 45, 7]); // retorna [12, 45]
filter([3, 5]);         // retorna []</code></pre>

                <div class="form-group <%= "has-error" if @test.errors[:a2].any? %>">
                  <%= f.text_area :a2, class: "form-control", id: "a2" %>
                  <% if @test.errors[:a2].any? %>
                    <div class="help-block"><%= @test.errors[:a2].first %></div>
                  <% end %>
                </div>
              </div>

              <div class="question-wrapper">
                <div class="title <%= "has-error" if @test.errors[:a3].any? %>">3. Calcula la hipotenusa</div>
                <p>Escribe una función en JavaScript llamada <code>hypotenuse</code> que reciba dos parámetros: <code>a</code> y <code>b</code>, que representan los lados de un triángulo, y que retorne la hipotenusa.</p>
                <p>Ejemplos:</p>
                <pre class="examples"><code>hypotenuse(3, 4);    // retorna 5
hypotenuse(10, 13);  // retorna 16.401219466856727</code></pre>

                <div class="form-group <%= "has-error" if @test.errors[:a3].any? %>">
                  <%= f.text_area :a3, class: "form-control", id: "a3" %>
                  <% if @test.errors[:a3].any? %>
                    <div class="help-block"><%= @test.errors[:a3].first %></div>
                  <% end %>
                </div>
              </div>

              <div class="actions text-right">
                <button type="submit" class="btn btn-primary" name="button">Enviar</button>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  var modes = {
    0: "javascript",
    1: "ruby",
    2: "python",
    3: "php",
    4: "text/x-java",
    5: "text/x-c++src",
    6: "text/x-csharp"
  }

  var options = {
    mode: modes[0],
    theme: 'monokai',
    lineNumbers: true,
    height: 100
  };

  var a1 = CodeMirror.fromTextArea(document.getElementById("a1"), options);
  a1.setSize(null, 200);

  var a2 = CodeMirror.fromTextArea(document.getElementById("a2"), options);
  a2.setSize(null, 200);

  var a3 = CodeMirror.fromTextArea(document.getElementById("a3"), options);
  a3.setSize(null, 200);

  $('#lang').on('change', function(e) {
    var value = e.currentTarget.value
    a1.setOption("mode", modes[value])
    a2.setOption("mode", modes[value])
    a3.setOption("mode", modes[value])
  })
</script>
