// required: host, port, phantom_util_path
var evaluations = [];
var page = require('webpage').create();

page.settings.resourceTimeout = 10000; // 10 seconds
page.onResourceTimeout = function(e) {
  console.log(e.errorCode);   // it'll probably be 408
  console.log(e.errorString); // it'll probably be 'Network timeout on resource'
  console.log(e.url);         // the url whose request timed out
  phantom.exit(1);
};

function open(path, callback, viewportSize, setup) {
  evaluations.push({ path: path, callback: callback, viewportSize: viewportSize, setup: setup });
}

var error = false;
function evaluate(index) {
  if (index >= evaluations.length || error) {
    phantom.exit();
  }

  var evaluation = evaluations[index];
  page.viewportSize = evaluation.viewportSize || { width: 1024, height: 800 };
  var url = '<%= host %>:<%= port %>/' + evaluation.path;
  page.onError = function(msg, trace) {
    console.log(msg);
    error = true;
  };

  page.open(url, function(status) {
    try {
      if (status != 'success') {
        console.log('No se pudo abrir ' + evaluation.path);
        return;
      }

      if (evaluation.setup) {
        evaluation.setup(page);
      }

      page.injectJs('<%= phantom_util_path %>');
      var result = page.evaluate(evaluation.callback);
      if (result) {
        console.log(result);
        phantom.exit();
      } else {
        setTimeout(function() { evaluate(index + 1) }, 100);
      }
    } catch (e) {}
  });
}
